# - name: Descargar example-iam-policy.json
#   get_url:
#     url: "https://raw.githubusercontent.com/kubernetes-sigs/aws-ebs-csi-driver/v0.9.0/docs/example-iam-policy.json"
#     dest: "/root/example-iam-policy.json"
#     mode: '0644' # Permisos para el archivo descargado

# - name: Crear o actualizar una política de IAM
#   iam_policy:
#     policy_name: "AmazonEKS_EBS_CSI_Driver_Policy"
#     policy_document: "{{ lookup('template', 'AmazonEKS_EBS_CSI_Driver_Policy.yml.j2') }}"
#     state: present
#   register: policy

- name: Crear o actualizar una política de IAM
  command: >
    aws iam create-policy
    --policy-name "AmazonEKS_EBS_CSI_Driver_Policy"
    --policy-document "{{ lookup('template', 'AmazonEKS_EBS_CSI_Driver_Policy.yml.j2') }}"
  register: policy
  ignore_errors: yes

- name: Mostrar resultado
  debug:
    var: policy

# - name: Crear IAM policy AmazonEKS_EBS_CSI_Driver
#   shell: | 
#     aws iam create-policy --policy-name AmazonEKS_EBS_CSI_Driver_Policy --policy-document file://example-iam-policy.json

- name: Activar autenticacion OIDC con el cluster
  shell: | 
    eksctl utils associate-iam-oidc-provider --cluster "{{ cluster_name }}" --approve

- name: Crear cuenta de servicio
  shell: | 
    "eksctl create iamserviceaccount --name ebs-csi-controller-sa --namespace kube-system --cluster "{{ cluster_name }}" \
    --role-name AmazonEKS_EBS_CSI_DriverRole --role-only --attach-policy-arn arn:aws:iam::aws:policy/service-role/AmazonEBSCSIDriverPolicy --approve"
  register: sa_result
  ignore_errors: true

- name: Verificar Service Account
  fail:
    msg: "El rol ya existe...!!!"
  when: "'EKSEBSCSIDriverRole' in sa_result.stderr"

- name: Instalar el CSI 
  shell: kubectl apply -k "github.com/kubernetes-sigs/aws-ebs-csi-driver/deploy/kubernetes/overlays/stable/?ref=master"
  register: apply_result

- name: Mostrar resultados
  debug:
    var: apply_result.stdout_lines

# - name: annotations
#   shell: "kubectl annotate serviceaccount ebs-csi-controller-sa -n kube-system eks.amazonaws.com/role-arn=arn:aws:iam::348691576534:role/EKSEBSCSIDriverRole"

# - name: delete pods
#   shell: "kubectl delete pods -n kube-system -l=app=ebs-csi-controller"

- name: Adding EBS
  import_tasks: storage.yml

- name: Adding Claim
  import_tasks: claim.yml

- name: Adding Pod
  import_tasks: pod.yml