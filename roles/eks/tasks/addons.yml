# - name: Apply CoreDNS
#   ansible.builtin.command:
#     cmd: kubectl apply -f https://amazonaws-charts.storage.googleapis.com/stable/coredns/coredns-v1.10.1-eksbuild.1.yaml
#   delegate_to: localhost

- name: Create CoreDNS addon
  ansible.builtin.command:
    cmd: aws eks create-addon --cluster-name cluster-santander --addon-name coredns --addon-version v1.10.1-eksbuild.1
  delegate_to: localhost

- name: Create kube-proxy addon
  ansible.builtin.command:
    cmd: aws eks create-addon --cluster-name cluster-santander --addon-name kube-proxy --addon-version v1.27.1-eksbuild.1
  delegate_to: localhost

- name: Create VPC CNI addon
  ansible.builtin.command:
    cmd: aws eks create-addon --cluster-name cluster-santander --addon-name vpc-cni --addon-version v1.12.6-eksbuild.2
  delegate_to: localhost

# - name: Install CoreDNS
#   community.kubernetes.k8s:
#     state: present
#     kubeconfig: /home/osboxes/.kube/config
#     definition:
#       apiVersion: apps/v1
#       kind: Deployment
#       metadata:
#         name: coredns
#         namespace: kube-system
#       spec:
#         ...
#   register: coredns

# - name: Install kube-proxy
#   community.kubernetes.k8s:
#     state: present
#     kubeconfig: /home/osboxes/.kube/config
#     definition:
#       apiVersion: apps/v1
#       kind: DaemonSet
#       metadata:
#         name: kube-proxy
#         namespace: kube-system
#       spec:
#         ...
#   register: kube_proxy

# - name: Install Amazon VPC CNI
#   community.kubernetes.k8s:
#     state: present
#     kubeconfig: /home/osboxes/.kube/config
#     definition:
#       apiVersion: apps/v1
#       kind: DaemonSet
#       metadata:
#         name: aws-node
#         namespace: kube-system
#       spec:
#         ...
#   register: aws_cni